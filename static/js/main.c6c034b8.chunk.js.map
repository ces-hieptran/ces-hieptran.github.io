{"version":3,"sources":["image/logo.png","utilities/formatDate.js","components/AppBar/AppBar.js","components/Checkbox/Checkbox.js","components/SubTask/SubTask.js","components/Task/Task.js","components/Column/Column.js","components/FormTaskDetail/SubTask/SubTask.js","components/FormTaskDetail/FormTaskDetail.js","components/BoardContent/BoardContent.js","utilities/dragDrop.js","components/FormAddHashtag/FormAddHashtag.js","components/FormEditHashtag/FormEditHashtag.js","components/Hashtag/Hashtag.js","components/FilterColumn/FilterColumn.js","components/MainBoard/MainBoard.js","App.js","reportWebVitals.js","index.js"],"names":["FormatDateToAdd","dateTask","date","getDate","month","getMonth","getFullYear","AppBar","useSearchParams","setSearch","className","onClick","currentDate","Date","src","logo","alt","CheckboxContainer","styled","div","Icon","svg","HiddenCheckbox","input","attrs","type","StyledCheckbox","props","checked","Checkbox","viewBox","points","SubTask","subtask","onCheckSubTask","isTaskCompleted","useState","status","checkSubTask","setCheckSubTask","useEffect","onChange","e","id","target","title","Task","task","hashtags","check","setCheck","subtasks","setSubTasks","isReLoadSubTask","setReLoadSubTask","fetchSubTasks","a","axios","get","BASE_URL","res","data","handleTaskChange","post","id_subtask","status_subtask","window","location","replace","to","length","map","index","describe","hashtag","name","Column","isShowAddNewTask","setIsShowAddNewTask","textAreaRef","useRef","valueTextArea","setValueTextArea","searchParam","column","onTaskDrop","AddNewTask","tasks","handleAddNewTask","idHashtag","newTask","current","focus","rows","placeholder","ref","value","event","class","groupName","onDrop","dropResult","getChildPayload","dragClass","dropClass","dropPlaceholder","animationDuration","showOnTop","dropPlaceholderAnimationDuration","setTaskInColumn","onUpdateSubTask","onDeleteSubTask","TitleSubTask","setTitleSubTask","disable","setDisable","Form","Control","size","disabled","onBlur","FormAddTaskDetail","idtask","useParams","setTask","setHashTags","startDate","setStartDate","startDueDate","setStartDueDate","optionHashTags","setOptionHashTags","optionSelectedHashTags","setOptionSelectedHashTags","isReLoadListSubTasks","setReLoadSubTasks","navigate","useNavigate","ChangeOptionToHashTags","options","option","push","cat","fetchTasks","defaultOptions","dataTask","dataHashTags","slice","key","forEach","dataSubTask","AcceptChangeTask","edit_task","document","getElementById","parentId","userId","put","ChangeSelectedHashTags","DeleteTask","confirm","delete","AddNewSubTaskInTask","newSubTask","id_delete_sub_task","id_edit_subtask","title_edit_subtask","editSubTask","defaultValue","dateFormat","selected","displayValue","selectedValues","onSelect","onRemove","axiosHeaders","BoardContent","columns","setColumns","ReLoadBoardContent","setReLoadBoardContent","fetchHashTags","valueDate","bonusCondition","dataColumn","moment","i","format","add","setHashtagChange","hashtagChange","headers","columnId","removedIndex","addedIndex","ChangeDateOfTask","payload","newColumns","currentColumn","find","arr","dragResult","Boolean","result","itemToAdd","splice","applyDrag","taskOrder","dateChange","changeDate","id_task","updateDate","setColumnInBoard","FormAddHashtag","onCreateHashtag","modalVisible","setName","isVisible","setIsVisible","onSubmit","preventDefault","required","FormEditHashtag","onEditHashtag","fetch","then","json","catch","error","alert","Hashtag","deleteStatus","setDeleteStatus","setSearchParams","listHashtag","setChannel","response","sort","b","loadHashtag","tabIndex","findByHashtag","style","color","trigger","position","FilterColumn","Calendar","onClickDay","selectRange","minDetail","MainBoard","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","path","element"],"mappings":"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","file":"static/js/main.c6c034b8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.251adb89.png\";","export function FormatDateToAdd(dateTask) {\n    let date = dateTask.getDate();\n    let month = dateTask.getMonth()+1;\n    let year = dateTask.getFullYear();\n    if(date<10) date = '0'+date;\n    if(month<10) month = '0'+month;\n    return date+'-'+month+'-'+year;\n}","import React from 'react';\nimport './AppBar.scss';\nimport logo from '../../image/logo.png';\nimport { useSearchParams } from 'react-router-dom';\nimport { FormatDateToAdd } from '../../utilities/formatDate';\n\n\nconst AppBar = () => {\n    const [search, setSearch] = useSearchParams();\n    const onClick = () => {\n        let currentDate = new Date();\n        setSearch({date:FormatDateToAdd(currentDate)});\n    };\n    return (\n        <>\n            <div className=\"navbar-app\">\n                <button className='logo-btn' onClick={() => onClick()}>\n                    <img className='app-logo' src={logo} alt='App-logo'/>\n                </button>    \n                <div className=\"app-title\">\n                    <strong>Sunsama</strong>\n                </div> \n            </div>\n        </>\n    )\n}\nexport default AppBar;","import React from 'react'\nimport styled from 'styled-components'\n\nconst CheckboxContainer = styled.div`\n  display: inline-block;\n  vertical-align: middle;\n`\n\nconst Icon = styled.svg`\n  fill: none;\n  stroke: white;\n  stroke-width: 2px;\n`\n\nconst HiddenCheckbox = styled.input.attrs({ type: 'checkbox' })`\n  border: 0;\n  clip: rect(0 0 0 0) !important;\n  clippath: inset(50%) !important;\n  height: 1px !important;\n  margin: -1px !important;\n  overflow: hidden !important;\n  padding: 0 !important;\n  position: absolute !important;\n  white-space: nowrap !important;\n  width: 1px !important;\n`\n\nconst StyledCheckbox = styled.div`\n  display: inline-block !important;\n  width: 15px !important;\n  height: 15px !important;\n  background: ${props => (props.checked ? '#00FB2D' : '#A9FEB8')} !important;\n  border-radius: 12px !important;\n  transition: all 150ms !important;\n  opacity: ${props => (props.checked ? 1 : 0.2)};\n\n  ${HiddenCheckbox}:focus + & {\n    box-shadow: 0 0 0 3px pink !important;\n  }\n\n  ${HiddenCheckbox}:hover + & {\n    opacity: 1;\n  }\n\n  ${Icon} {\n    visibility: ${props => (props.checked ? 'visible' : 'hidden')}\n  }\n`\n\nconst Checkbox = ({ className, checked, ...props }) => (\n  <CheckboxContainer className={className}>\n    <HiddenCheckbox checked={checked} {...props} />\n    <StyledCheckbox checked={checked}>\n      <Icon viewBox=\"-1 2 26 30\">\n        <polyline points=\"20 6 9 17 4 12\" />\n      </Icon>\n    </StyledCheckbox>\n  </CheckboxContainer>\n)\n\nexport default Checkbox\n","import React, {useEffect, useState} from \"react\";\nimport './SubTask.scss';\nimport Checkbox from \"../Checkbox/Checkbox\";\nconst SubTask = (props)=>{\n    const { subtask , onCheckSubTask , isTaskCompleted } = props;\n    const [checkSubTask, setCheckSubTask] = useState(subtask.status);\n    useEffect(()=>{\n        if(isTaskCompleted == true) setCheckSubTask(true);\n    },[isTaskCompleted]);\n    const handleSubTaskChange = (e) => {\n        onCheckSubTask(subtask.id,e.target.checked);\n        setCheckSubTask(e.target.checked);\n    };\n    return (\n        <div className=\"subtask-item\">\n            {/* <input\n                type=\"checkbox\"\n                className=\"check-subtask checker\"\n                checked={checkSubTask}\n                onChange={handleSubTaskChange}\n            /> */}\n            <label>\n            <Checkbox \n                checked={checkSubTask}\n                onChange={handleSubTaskChange}\n            />\n            </label>\n            {subtask.title}\n        </div>\n    )\n}\nexport default SubTask","import React, { useState, useEffect } from \"react\";\nimport \"./Task.scss\";\nimport SubTask from \"../SubTask/SubTask\";\nimport { AiOutlineInfoCircle } from \"react-icons/all\";\nimport { Link } from \"react-router-dom\";\nimport moment from \"moment\";\nimport axios from \"axios\";\nimport { BASE_URL } from \"../../index\";\nimport Checkbox from \"../Checkbox/Checkbox\";\nconst Task = (props) => {\n    const { task } = props;\n    //const subtasks = task.subtasks;\n    const hashtags = task.hashtags;\n    const [check, setCheck] = useState(task.status);\n    const [subtasks, setSubTasks] = useState([]);\n    const [isReLoadSubTask, setReLoadSubTask] = useState(false);\n    useEffect(() => {\n        const fetchSubTasks = async () => {\n            let res = await axios.get(\n                `${BASE_URL}/tasks/` + task.id + \"/subtasks\"\n            );\n            setSubTasks(res.data);\n            setReLoadSubTask(false);\n        };\n        fetchSubTasks();\n    }, [isReLoadSubTask]);\n    const handleTaskChange = async (e) => {\n        setCheck(e.target.checked);\n        await axios.post(`${BASE_URL}/tasks/` + task.id + \"/complete\");\n        if (e.target.checked == true) setReLoadSubTask(true);\n    };\n    const onCheckSubTask = async (id_subtask, status_subtask) => {\n        try {\n            if (status_subtask == false) setCheck(false);\n            await axios.post(`${BASE_URL}/tasks/` + id_subtask + \"/complete\");\n        } catch (e) {}\n    };\n    function OpenFormTaskDetail() {\n        window.location.replace(`/#/task-detail/` + task.id);\n    }\n    return (\n        <div className=\"task-item\">\n            <div className=\"header-task\">\n                {/* <input\n                        type=\"checkbox\"\n                        className=\"checker\"\n                        checked= {check}\n                        onChange={handleTaskChange}\n                    /> */}\n                <label>\n                    <Checkbox\n                        className=\"checker\"\n                        checked={check}\n                        onChange={handleTaskChange}\n                    />\n                </label>\n                <div className=\"title-task\" onClick={OpenFormTaskDetail}>\n                    {task.title}\n                </div>\n                <Link to={`/task-detail/` + task.id}>\n                    <AiOutlineInfoCircle className=\"info-task\" />\n                </Link>\n            </div>\n            {subtasks &&\n                subtasks.length > 0 &&\n                subtasks.map((subtask, index) => {\n                    return (\n                        <SubTask\n                            key={subtask.id}\n                            subtask={subtask}\n                            onCheckSubTask={onCheckSubTask}\n                            isTaskCompleted={check}\n                        />\n                    );\n                })}\n            <div className=\"decription-task\">{task.describe}</div>\n            <div className=\"hashtag-of-task\">\n                {hashtags &&\n                    hashtags.length > 0 &&\n                    hashtags.map((hashtag, index) => {\n                        return (\n                            <div className=\"task-hashtag-label\">\n                                #{hashtag.name}\n                            </div>\n                        );\n                    })}\n            </div>\n        </div>\n    );\n};\nexport default Task;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport './Column.scss';\nimport Task from \"../Task/Task\";\nimport { Container, Draggable } from \"react-smooth-dnd\";\nimport { FormatDateToAdd } from \"../../utilities/formatDate\";\nimport { useSearchParams } from \"react-router-dom\";\nconst Column = (props) => {\n    const [isShowAddNewTask, setIsShowAddNewTask] = useState(false);\n    const textAreaRef = useRef(null);\n    const [valueTextArea, setValueTextArea] = useState(\"\");\n    const [searchParam, setSearchParams] = useSearchParams();\n    const { column, onTaskDrop, AddNewTask } = props;\n    const tasks = column.tasks;\n    useEffect(() => {\n        if (isShowAddNewTask === true) {\n            textAreaRef.current.focus();\n        }\n    }, [isShowAddNewTask])\n    function handleAddNewTask() {\n        if (valueTextArea != null) {\n            const dateTask = new Date(column.id);\n            let idHashtag = searchParam.get('hashtag');\n            let newTask = '';\n            if (idHashtag != 'null' && idHashtag != 0) {\n                newTask = {\n                    \"title\": valueTextArea,\n                    \"describe\": \"\",\n                    \"date\": FormatDateToAdd(dateTask) + \" 00:00:00\",\n                    \"dueDate\": FormatDateToAdd(dateTask) + \" 00:00:00\",\n                    \"hashtagsId\": [idHashtag],\n                    \"isStatus\": false,\n                    \"parentId\": 0,\n                    \"userId\": 1\n                };\n            }\n            else {\n                newTask = {\n                    \"title\": valueTextArea,\n                    \"describe\": \"\",\n                    \"date\": FormatDateToAdd(dateTask) + \" 00:00:00\",\n                    \"dueDate\": FormatDateToAdd(dateTask) + \" 00:00:00\",\n                    \"hashtagsId\": [],\n                    \"isStatus\": false,\n                    \"parentId\": 0,\n                    \"userId\": 1\n                };\n            }\n            AddNewTask(newTask);\n            setValueTextArea('');\n            setIsShowAddNewTask(false);\n        }\n    }\n    const setTaskInColumn = (tasks) => {\n        return (tasks && tasks.length > 0 && tasks.map((task, index) => {\n            return (\n                <Draggable key={task.id}>\n                    <Task\n                        key={task.id}\n                        task={task}\n                    />\n                </Draggable>\n            )\n        }))\n    }\n    function ShowAddNewTask(e) {\n        if (isShowAddNewTask === true) setIsShowAddNewTask(false);\n        else setIsShowAddNewTask(true);\n    }\n    return (\n        <>\n            <div className=\"column\">\n                <header className=\"column-drag-handle\">\n                    {column.title}\n                </header>\n                <div className=\"date_column\">  {column.describe}  </div>\n                {isShowAddNewTask === true &&\n                    <div className='add-new-task'>\n                        <div className=\"input-form\">\n                            <textarea\n                                rows=\"1\"\n                                className='form-control'\n                                placeholder=\"Task's title...\"\n                                ref={textAreaRef}\n                                value={valueTextArea}\n                                onChange={(event) => setValueTextArea(event.target.value)}\n                            ></textarea>\n                        </div>\n                        <div className='group-btn'>\n                            <button className='btn btn-success' onClick={handleAddNewTask}>\n                                Add Task\n                            </button>\n                            {/* <i className='fa fa-times icon' onClick={ShowAddNewTask}></i> */}\n                            <div class=\"close-container\" onClick={handleAddNewTask}>\n                                <div class=\"leftright\"></div>\n                                <div class=\"rightleft\"></div>\n                                <label class=\"close\">close</label>\n                            </div>\n                        </div>\n                    </div>\n                }\n                {isShowAddNewTask === false &&\n                    <footer>\n                        <div className=\"footer-action\" onClick={ShowAddNewTask}>\n                            <i className='fa fa-plus icon' >\n                            </i> Add another task\n                        </div>\n                    </footer>\n                }\n                <div className=\"list-task\">\n                    <Container\n                        {...column.props}\n                        groupName=\"col\"\n                        onDrop={(dropResult) => onTaskDrop(dropResult, column.id)}\n                        getChildPayload={index => tasks[index]}\n                        dragClass=\"card-ghost\"\n                        dropClass=\"card-ghost-drop\"\n                        dropPlaceholder={{\n                            animationDuration: 200,\n                            showOnTop: true,\n                            className: 'task-drop-preview'\n                        }}\n                        dropPlaceholderAnimationDuration={200}\n                    >\n                        {setTaskInColumn(tasks)}\n                    </Container>\n                </div>\n            </div>\n        </>\n    )\n}\nexport default Column;","import React, {useEffect, useState} from \"react\";\nimport './SubTask.scss';\nimport {Form} from \"react-bootstrap\";\nimport {AiOutlineDelete, AiOutlineEdit, FiPlay} from \"react-icons/all\";\nconst SubTask = (props) =>{\n    const { subtask ,onUpdateSubTask,onDeleteSubTask} = props;\n    const [TitleSubTask, setTitleSubTask] = useState(\"\");\n    const [disable, setDisable] = useState(true);\n    useEffect(()=>{\n        if(subtask && subtask.title){\n            setTitleSubTask(subtask.title);\n        }\n    },[subtask]);\n    function onChangeTitleSubTask(e){\n        setTitleSubTask(e.target.value);\n    }\n    const EnableEditSubTask = () => {\n        setDisable(false);\n    }\n    function onUpdateTitleSubTask(event){\n        if(event.target.value !== subtask.name){\n            onUpdateSubTask(subtask.id,event.target.value);\n        }\n        setDisable(true);\n    }\n    function DeleteSubTask(event) {\n        onDeleteSubTask(subtask.id);\n    }\n    return (\n        <div className=\"subtask-item\">\n            <FiPlay className=\"subtask-icon\"/>\n            <Form.Control\n            size={\"sm\"}\n            type=\"text\"\n            value={TitleSubTask}\n            className=\"subtask\"\n            disabled={disable}\n            onChange={onChangeTitleSubTask}\n            onBlur={onUpdateTitleSubTask}\n        />\n            <div className=\"edit-button\">\n                <AiOutlineEdit\n                    className=\"edit-title-button\"\n                    onClick={EnableEditSubTask}\n                />\n                <AiOutlineDelete\n                    className=\"delete-button\"\n                    onClick={DeleteSubTask}\n                />\n            </div>\n        </div>\n    )\n}\nexport default SubTask","import React,{useEffect,useState} from \"react\";\nimport './FormTaskDetail.scss'\nimport {Link, useParams, useNavigate} from \"react-router-dom\";\nimport SubTask from \"./SubTask/SubTask\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport {IoIosAddCircleOutline, RiDeleteBack2Line} from \"react-icons/all\";\nimport axios from \"axios\";\nimport {BASE_URL} from \"../../index\";\nimport {Multiselect} from \"multiselect-react-dropdown\";\nimport {FormatDateToAdd} from \"../../utilities/formatDate\";\nconst FormAddTaskDetail = () => {\n    const { idtask } = useParams();\n    const [task,setTask] = useState({});\n    const [hashtags, setHashTags] = useState([]);\n    const [startDate, setStartDate] = useState(new Date());\n    const [startDueDate, setStartDueDate] = useState(new Date());\n    const [subtasks, setSubTasks] = useState([]);\n    const [optionHashTags , setOptionHashTags] = useState([]);\n    const [optionSelectedHashTags , setOptionSelectedHashTags] = useState([]);\n    const [isReLoadListSubTasks,setReLoadSubTasks] = useState(false);\n    const navigate = useNavigate();\n    \n    useEffect( () => {\n        const fetchTasks = async () => {\n            try {\n                let options = [];\n                let defaultOptions = [];\n                let dataTask = await axios.get(`${BASE_URL}/tasks/` + idtask + '/');\n                let dataHashTags = await axios.get(`${BASE_URL}/hashtags/`);\n                setTask(dataTask.data);\n                setHashTags(dataHashTags.data);\n                setStartDate(new Date(dataTask.data.date.slice(0, 10)));\n                setStartDueDate(new Date(dataTask.data.date.slice(0, 10)));\n                dataTask.data.hashtags.map((hashtag)=>{\n                    defaultOptions.push({\n                        cat: hashtag.id,\n                        key: hashtag.name\n                    });\n                });\n                setOptionSelectedHashTags(defaultOptions);\n                dataHashTags.data.forEach((hashtag)=>{\n                    options.push({\n                        cat: hashtag.id,\n                        key: hashtag.name\n                    });\n                });\n                setOptionHashTags(options);\n            } catch (e) {\n            }\n        }\n            fetchTasks();\n    },[]);\n    useEffect(async ()=>{\n        let dataSubTask = await axios.get(`${BASE_URL}/tasks/` + idtask + '/subtasks');\n        setSubTasks(dataSubTask.data);\n        setReLoadSubTasks(false);\n    },[isReLoadListSubTasks])\n    function ChangeOptionToHashTags(options){\n        let hashtags = [];\n        options.map((option) =>{\n            hashtags.push(option.cat);\n        });\n        return hashtags;\n    }\n    const AcceptChangeTask = async () =>{\n        const edit_task = {\n            \"title\": document.getElementById('name-hashtag').value,\n            \"describe\": document.getElementById('valueDescribeTask').value,\n            \"date\": FormatDateToAdd(startDate)+\" 00:00:00\",\n            \"dueDate\": FormatDateToAdd(startDueDate)+\" 00:00:00\",\n            \"hashtagsId\": ChangeOptionToHashTags(optionSelectedHashTags),\n            \"isStatus\": task.status,\n            \"parentId\": task.parentId,\n            \"userId\": task.userId\n        }\n        await axios.put(`${BASE_URL}/tasks/` + idtask + '/',edit_task);\n        window.location.replace('/dashboard');\n    }\n    function ChangeSelectedHashTags(data){\n        setOptionSelectedHashTags(data)\n    }\n    const DeleteTask = async () => {\n        if(window.confirm(\"Do you want to delete this task ?\") == true){\n            await axios.delete(`${BASE_URL}/tasks/` + idtask + '/');\n            window.location.replace('/dashboard');\n        }\n    }\n    const AddNewSubTaskInTask = async () => {\n        if(document.getElementById('title-subtask').value != ''){\n            const newSubTask = {\n                \"title\": document.getElementById('title-subtask').value,\n                \"describe\":''\n            }\n            await axios.post(`${BASE_URL}/tasks/` + idtask + '/subtasks',newSubTask);\n            setReLoadSubTasks(true);\n            document.getElementById('title-subtask').value = null;\n        }\n    }\n    const onDeleteSubTask = async (id_delete_sub_task) => {\n        await axios.delete(`${BASE_URL}/tasks/`+id_delete_sub_task);\n        setReLoadSubTasks(true);\n    }\n    const onUpdateSubTask = async (id_edit_subtask,title_edit_subtask) => {\n        const editSubTask = {\n            \"title\": title_edit_subtask,\n            \"describe\": ''\n        }\n        await axios.put(`${BASE_URL}/tasks/`+id_edit_subtask,editSubTask);\n        setReLoadSubTasks(true);\n    }\n    return (\n        <div className=\"edit-container\">\n        <div className=\"body-form\" >\n            <h2 className=\"Topic-form\"> Task Detail</h2>\n            <div  className=\"input-title\">\n                <label>Title:</label>\n                <input\n                    type=\"text\"\n                    name=\"name\"\n                    id=\"name-hashtag\"\n                    defaultValue = {task.title}/>\n            </div>\n            <div className=\"input-description\">\n                <label className=\"name-description\">Description: </label>\n                <textarea\n                    name=\"textValue\"\n                    id=\"valueDescribeTask\"\n                    className=\"description-task\"\n                    defaultValue = {task.describe}/>\n            </div>\n            <div className=\"date-task\">\n                <label className=\"name-date\">Date of Task</label>\n                <DatePicker className=\"date\"\n                            dateFormat=\"dd/MM/yyyy\"\n                            selected={startDate}\n                            onChange={(date) => setStartDate(date)}/>\n            </div>\n            <div className=\"due-date\">\n                <label className=\"name-duedate\"> Due Day </label>\n                <DatePicker\n                            className=\"duedate\"\n                            dateFormat=\"dd/MM/yyyy\"\n                            selected={startDueDate}\n                            onChange={(date) => setStartDueDate(date)} />\n            </div>\n            <div className=\"board-subtask\">\n                <div><label>SubTask: </label></div>\n                <div className=\"detail-list-hashtag\">\n                    {subtasks && subtasks.length > 0 && subtasks.map((subtask  ,index) =>{\n                        return (\n                            <SubTask\n                                key = {subtask.id}\n                                subtask = {subtask}\n                                onDeleteSubTask = {onDeleteSubTask}\n                                onUpdateSubTask = {onUpdateSubTask}\n                            />\n                        )\n                    })}\n                    <div className='add-new-subtask'>\n                        <div  className=\"name-subtask\">\n                            <label>Title: </label><input className=\"subtask-title-input\" type=\"text\" name=\"title\" id=\"title-subtask\"/>\n                        </div>\n                        <button className=\"add-button\" onClick={AddNewSubTaskInTask}> Add </button>\n                    </div>\n                </div>\n            <div className=\"detail-list-hashtag\">\n                <label>Channels: </label>\n                <Multiselect\n                    displayValue=\"key\"\n                    options={optionHashTags}\n                    selectedValues={optionSelectedHashTags}\n                    onSelect={ChangeSelectedHashTags}\n                    onRemove={ChangeSelectedHashTags}\n                />\n            </div>\n            </div>\n            <div className=\"buttons\" >\n                <button className=\"save-button\" onClick={AcceptChangeTask}> Save </button>\n                <button className=\"cancel-button\" onClick={() => navigate(-1)}>Cancel\n                    {/* <Link to=\"/dashboard\" className=\"return-dashboard\"></Link> */}\n                </button>\n                <button className=\"delete-button\" onClick={DeleteTask}> Delete </button>\n            </div>\n        </div>\n        </div>\n    )\n}\nexport default FormAddTaskDetail","import React, { useState, useEffect } from 'react';\nimport {\n    BrowserRouter as Router,\n    Link,\n    useSearchParams,\n  } from \"react-router-dom\";\nimport './BoardContent.scss'\nimport Column from \"../Column/Column\";\nimport { Container, Draggable } from \"react-smooth-dnd\";\nimport {applyDrag} from \"../../utilities/dragDrop\";\nimport axios from \"axios\";\nimport {BASE_URL} from \"../../index\";\nimport moment from \"moment\";\nimport FormTaskDetail from \"../FormTaskDetail/FormTaskDetail\";\nimport task from \"../Task/Task\";\nconst axiosHeaders =  {\n    'Content-Type': 'application/json',\n    'Accept':'*/*'\n    }\nconst BoardContent = (props)  =>{\n    const [board, setBoard] = useState({});\n    const [columns, setColumns] = useState([]);\n    const [searchParam, setSearchParams] = useSearchParams();\n    const [ReLoadBoardContent, setReLoadBoardContent] = useState(false);\n    useEffect(()=>{\n        setReLoadBoardContent(true);\n    },[searchParam])\n    useEffect(() => {\n        const fetchHashTags = async () => {\n            const idHashtag=searchParam.get('hashtag');\n            const valueDate=searchParam.get('date');\n            var bonusCondition = '';\n            if(idHashtag && idHashtag!= 0 && idHashtag != 'null') {bonusCondition = '?hashtagId='+idHashtag;}\n            let dataColumn = [];\n            const date = moment(valueDate,'DD-MM-YYYY');\n            for (let i=0;i<4;i++)\n            {\n                let res = await axios.get(`${BASE_URL}/tasks/date/`+date.format(\"YYYY-MM-DD\")+bonusCondition);\n                dataColumn.push({\n                    id:date.format(\"YYYY-MM-DD\"),\n                    title: date.format(\"dddd\"),\n                    describe: date.format(\"MMMM Do\"),\n                    tasks:res.data\n                });\n                date.add(1, 'day');\n            }\n            setColumns(dataColumn);\n            setReLoadBoardContent(false);\n            props.setHashtagChange(false);\n        }\n        fetchHashTags();\n    },[ReLoadBoardContent, props.hashtagChange]);\n    const AddNewTask = async (newTask) => {\n        await axios.post(`${BASE_URL}/tasks/`,newTask,{headers:axiosHeaders});\n        setReLoadBoardContent(true);\n    }\n    const onTaskDrop = (dropResult,columnId) => {\n        if(dropResult.removedIndex !== null || dropResult.addedIndex !== null )\n        {\n            ChangeDateOfTask(dropResult.payload,columnId);\n            let newColumns = [...columns];\n            let currentColumn = newColumns.find(column => column.id === columnId);\n            currentColumn.tasks = applyDrag(currentColumn.tasks,dropResult);\n            currentColumn.taskOrder = currentColumn.tasks.map(task =>task.id);\n            setColumns(newColumns)\n        }\n    }\n    const ChangeDateOfTask = (task, dateChange) => {\n        const changeDate = async (id_task,dateChange) => {\n            const updateDate = {\n                \"newDate\": dateChange\n            }\n            await axios.put(`${BASE_URL}/tasks/`+id_task+`/change_date/`,updateDate);\n        }\n        if(task.date.slice(0,10) != dateChange) changeDate(task.id,dateChange);\n    }\n    const setColumnInBoard = (columns) => {\n        return ( columns && columns.length > 0 && columns.map((column  ,index) =>{\n            return (\n                    <Column\n                        key = {column.id}\n                        column = {column}\n                        onTaskDrop = {onTaskDrop}\n                        AddNewTask = {AddNewTask}\n                    />\n            )\n        }))\n    }\n    return (\n            <div className=\"board-columns\">\n                {setColumnInBoard(columns)}\n            </div>\n    )\n}\nexport default BoardContent","import React, { useEffect } from 'react';\nimport axios from \"axios\";\nimport {BASE_URL} from \"../index\";\n\nexport const applyDrag = (arr, dragResult) => {\n    const { removedIndex, addedIndex, payload } = dragResult;\n    if (Boolean(removedIndex) && Boolean(addedIndex)) return arr;\n    const result = [...arr];\n\n    let itemToAdd = payload;\n\n    if (removedIndex !== null) {\n        itemToAdd = result.splice(removedIndex, 1)[0];\n    }\n\n    if (addedIndex !== null) {\n        result.splice(addedIndex, 0, itemToAdd);\n    }\n    return result;\n};\n\nexport const generateItems = (count, creator) => {\n    const result = [];\n    for (let i = 0; i < count; i++) {\n        result.push(creator(i));\n    }\n    return result;\n};","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Form, FormGroup, Label, Input, Button } from \"reactstrap\";\nimport './FormAddHashtag.scss';\nconst FormAddHashtag = (props) => {\n  const { onCreateHashtag,modalVisible} = props;\n  const [name, setName] = useState(\"\");\n  const [isVisible, setIsVisible] = useState(modalVisible);\n  const onChange = (e) => {\n    setName(e.target.value);\n  };\n  const onSubmit = (e) => {\n    e.preventDefault();\n    const newHashtag = {\n      name,\n    };\n    onCreateHashtag(newHashtag);\n    setIsVisible(false);\n  };\n  const handleClick = event => {\n    setIsVisible(current => !current);\n  };\n  // eslint-disable-next-line no-lone-blocks\n  {\n    if(isVisible){\n        return (\n            <Form  className=\"add-hashtag-form\" onSubmit={onSubmit}>\n              <FormGroup>\n                <Label>Channel</Label>\n                <Input\n                className=\"add-hashtag-input\"\n                  type=\"text\"\n                  value={name}\n                  onChange={onChange}\n                  name=\"name\"\n                  placeholder=\"Channel title...\"\n                  required\n                ></Input>\n              </FormGroup>\n              <div className=\"add-hashtag-group-btn\">\n                <Button type=\"submit\">Submit</Button>\n                <Button onClick={handleClick} className=\"btn btn-danger ml-2\">\n                  Cancel\n                </Button>\n              </div>\n            </Form>\n          );\n    }\n    else {\n        return <></>\n    }\n  }\n  \n};\nexport default FormAddHashtag;","import React, { useState, useContext, useEffect } from \"react\";\nimport './FormEditHashtag.scss';\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { BASE_URL } from \"../../index\";\nimport { Form, FormGroup, Label, Input, Button } from \"reactstrap\";\nconst FormEditHashtag = (props) => {\n  const { onEditHashtag, modalVisible, id } = props;\n  const [name, setName] = useState(\"\");\n  const [isVisible, setIsVisible] = useState(modalVisible);\n  const getData = () => {\n    fetch(`${BASE_URL}/hashtags/${id}`)\n      .then((res) => res.json())\n      .then((res) => {\n        const hashtag = res;\n        setName(hashtag.name);\n      })\n      .catch((error) => {\n        alert(error.data);\n      });\n  };\n  useEffect(() => {\n    getData();\n  }, []);\n  const onChange = (e) => {\n    setName(e.target.value);\n  };\n  const onSubmit = (e) => {\n    e.preventDefault();\n    e.preventDefault();\n    const newHashtag = {\n      id,\n      name,\n    };\n    onEditHashtag(newHashtag);\n    setIsVisible(false);\n  };\n  const handleClick = (event) => {\n    setIsVisible((current) => !current);\n  };\n  if (isVisible) {\n    return (\n      <Form className=\"edit-hashtag-form\" onSubmit={onSubmit}>\n        <FormGroup>\n          <Label>Channel title</Label>\n          <Input\n            className=\"edit-hashtag-input\"\n            type=\"text\"\n            value={name}\n            onChange={onChange}\n            name=\"name\"\n            placeholder=\"\"\n            required\n          ></Input>\n        </FormGroup>\n        <div className=\"edit-hashtag-group-btn\">\n          <Button type=\"submit\">Edit</Button>\n          <Button\n            onClick={handleClick}\n            to=\"/dashboard\"\n            className=\"btn btn-danger ml-2\"\n          >\n            Cancel\n          </Button>\n        </div>\n      </Form>\n    );\n  } else {\n    return <></>;\n  }\n};\nexport default FormEditHashtag;\n","/* eslint-disable no-undef */\nimport React, { useState, useEffect, createRef } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Link,\n  useSearchParams,\n} from \"react-router-dom\";\nimport Popup from \"reactjs-popup\";\nimport \"./Hashtag.scss\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { AiOutlineDelete, AiFillEdit } from \"react-icons/ai\";\nimport axios from \"axios\";\nimport { ListGroupItem, Button } from \"reactstrap\";\nimport FormAddHashtag from \"../FormAddHashtag/FormAddHashtag\";\nimport { BASE_URL } from \"../../index\";\nimport FormEditHashtag from \"../FormEditHashtag/FormEditHashtag\";\n\nconst Hashtag = (props) => {\n  const [deleteStatus, setDeleteStatus] = useState(true);\n  const [searchParam, setSearchParams] = useSearchParams();\n  const [listHashtag, setChannel] = useState([]);\n  const getData = () => {\n    fetch(BASE_URL + \"/hashtags\")\n      .then((res) => res.json())\n      .then((res) => {\n        const allHashtag = { id: 0, name: \"All\" };\n        setChannel([\n          allHashtag,\n          ...res.sort((a, b) => (a.name > b.name ? 1 : -1)),\n        ]);\n      })\n      .catch((error) => {\n        alert(error.data);\n      });\n  };\n  const onEditHashtag = (e) => {\n    axios\n      .put(`${BASE_URL}/hashtags/${e.id}`, e)\n      .then((response) => {\n        setDeleteStatus(!deleteStatus);\n        props.setHashtagChange(true);\n      })\n      .catch((error) => {\n        alert(error.data);\n      });\n  };\n  const deleteHashtag = (e) => {\n    axios.delete(BASE_URL + \"/hashtags/\" + e).then((response) => {\n      if (response.data != null) {\n        setDeleteStatus(!deleteStatus);\n        props.setHashtagChange(true);\n      }\n    });\n  };\n  const onCreateHashtag = (e) => {\n    axios\n      .post(BASE_URL + \"/hashtags/\", e)\n      .then((response) => {\n        setDeleteStatus(!deleteStatus);\n      })\n      .catch((error) => {\n        alert(error.data);\n      });\n  };\n  const findByHashtag = (e) => {\n    const date= searchParam.get('date');\n    setSearchParams({ hashtag: e,\n      date:date });\n  };\n  useEffect(() => {\n    getData();\n  }, [deleteStatus]);\n  const loadHashtag = listHashtag.map((listHashtag) => {\n    return (\n      <ListGroupItem\n        tabIndex={0}\n        onClick={(e) => findByHashtag(listHashtag.id)}\n        className=\"d-flex sub-hash-tag\"\n        key={listHashtag.id}\n      >\n        <p style={{ color: 'salmon' }}># </p>\n        <p>{listHashtag.name}</p>\n        {listHashtag.id ? (\n          <div className=\"ml-auto active\">\n            <Popup\n              trigger={\n                <button className=\"popup_edit_btn\">\n                  <AiFillEdit />\n                </button>\n              }\n              position=\"top left\"\n            >\n              <div className=\"popup\">\n                <FormEditHashtag\n                  onEditHashtag={onEditHashtag}\n                  modalVisible={true}\n                  id={listHashtag.id}\n                />\n              </div>\n            </Popup>\n            <Button\n              className=\"popup_delete-btn\"\n              color=\"white\"\n              size=\"sm\"\n              onClick={() => deleteHashtag(listHashtag.id)}\n            >\n              <AiOutlineDelete />\n            </Button>\n          </div>\n        ) : null}\n      </ListGroupItem>\n    );\n  });\n  return (\n    <div className=\"hashtags\">\n      <div className=\"hashtags-list\">\n        <div className=\"hashtags-list-item\">\n          <ul>{loadHashtag}</ul>\n        </div>\n\n        <Popup\n          trigger={<button className=\"add-popup-btn\"> + Add Channels</button>}\n          position=\"top left\"\n        >\n          <div className=\"popup\">\n            <FormAddHashtag\n              onCreateHashtag={onCreateHashtag}\n              modalVisible={true}\n            />\n          </div>\n        </Popup>\n      </div>\n    </div>\n  );\n};\nexport default Hashtag;\n","import React, {useEffect, useState} from \"react\";\nimport'./FilterColumn.scss';\nimport Hashtag from \"../Hashtag/Hashtag\";\nimport {FormatDateToAdd} from \"../../utilities/formatDate\";\nimport {useSearchParams} from \"react-router-dom\";\nimport {Calendar} from \"react-calendar\";\nconst FilterColumn = (props) =>{\n    const [value, onChange] = useState(new Date());\n    const [searchParam, setSearchParams] = useSearchParams();\n        useEffect(() => {\n            const hashtag= searchParam.get('hashtag');\n           setSearchParams({\n               hashtag:hashtag,\n            date: FormatDateToAdd(value)\n        });\n    }, [value]);\n    return (\n            <div className=\"filter-column\">\n                <Calendar className=\"calendar\"\n                          onClickDay={(value) => onChange(value)}\n                          value={value}\n                          selectRange={false}\n                          minDetail=\"month\"\n                />\n                <div className=\"list-hashtag\"> \n                <label className=\"hashtag-label\" >Channels</label>\n                <Hashtag\n                    setHashtagChange={(value) => props.setHashtagChange(value)}\n                />           \n                </div>\n            </div>\n    )\n}\nexport default FilterColumn","import React, { useEffect } from \"react\";\nimport './MainBoard.scss';\nimport BoardContent from \"../BoardContent/BoardContent\";\nimport FilterColumn from \"../FilterColumn/FilterColumn\";\nimport { useState } from \"react\";\nconst MainBoard = () => {\n    const [hashtagChange, setHashtagChange] = useState(false);\n    return (\n        <div className='main-board'>\n            <FilterColumn\n                setHashtagChange={(value) => setHashtagChange(value)}\n            />\n            <BoardContent \n                hashtagChange={hashtagChange}\n                setHashtagChange={(value) => setHashtagChange(value)}\n            />\n        </div>\n    )\n}\nexport default MainBoard","import AppBar from \"./components/AppBar/AppBar\";\nimport BoardBar from \"./components/BoardBar/BoardBar\";\nimport MainBoard from \"./components/MainBoard/MainBoard\";\nfunction App() {\n    return (\n        <div className=\"sunsame-clone\">\n            <AppBar/>\n            <MainBoard/>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./App.scss\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"font-awesome/css/font-awesome.min.css\";\nimport \"bootstrap/dist/css/bootstrap-grid.min.css\";\nimport { Route, Routes, BrowserRouter, Navigate, HashRouter,  } from \"react-router-dom\";\nimport FormAddHashtag from \"./components/FormAddHashtag/FormAddHashtag\";\nimport FormTaskDetail from \"./components/FormTaskDetail/FormTaskDetail\";\nexport const BASE_URL = \"https://sunsama.herokuapp.com\";\nReactDOM.render(\n    <React.StrictMode>\n        <HashRouter>\n            <Routes>\n                <Route path=\"/\" element={<Navigate to=\"/dashboard\" />}></Route>\n                <Route path=\"/dashboard\" element={<App />}></Route>\n                <Route path=\"/add-hashtag\" element={<FormAddHashtag />}></Route>\n                <Route\n                    path=\"/task-detail/:idtask\"\n                    element={<FormTaskDetail />}\n                ></Route>\n            </Routes>\n        </HashRouter>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\nreportWebVitals();\n"],"sourceRoot":""}